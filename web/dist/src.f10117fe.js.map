{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,ADOA,ICPA,ADOA,IAAA,ECPA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA;ACLA,ADKA,ICLM,IAAI,GAAG,CDKb,GCLiB,MAAA,CAAA,IAAJ,CAAS;AAAE,ADQtB,ECRsB,IAAI,EAAE,GDQ5B,IAAA,CCRoB,ADQA,IAApB,EAAmC;ACRG,ADQlB,ECRkB,GAAG,EAAE,EDQvB,IAAA,GAAA,IAAA;ACRA,ADMpB,CCNW,CAAb,ODME,MAAA,GAAwC,EAAxC;ACJF,ADMyC,ICNrC,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAChB,EAAA,OAAO,CAAC,GAAR,CAAY,UAAZ;AACD,ADMC,CCRF,CDQE,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;ACLtB,ADMI,ICNA,CAAC,EAAL,CAAQ,GDMG,KCNX,ADMgB,ECNE,EDMP,CAAU,QAAV,CCNO,ADMd;ACLF,ADMC,ECND,CDIA,MCJO,CAAC,GAAR,CAAY,UAAZ;AACD,CAFD;AAIA,ADKE,EAAA,ECLE,CAAC,CDKH,CAAA,KCLF,CAAa,GDKX,CAAA,GAAA,CCLF,EDKE,UAAI,MAAJ,EAAqB;AACnB,IAAA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;AACD,GAFD;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACtC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,IAAmB,CAApC,EAAuC;AACrC;AACD;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AACvB,MAAA,QAAQ;AACT,KAFD;AAGD,GAVD;;AAWF,SAAA,IAAA;AA9BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n  name?: string;\r\n  age?: number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n  events: { [key: string]: Callback[] } = {};\r\n\r\n  constructor(private data: UserProps) {}\r\n\r\n  get(propName: string): string | number {\r\n    return this.data[propName];\r\n  }\r\n\r\n  set(update: UserProps): void {\r\n    Object.assign(this.data, update);\r\n  }\r\n\r\n  on(eventName: string, callback: Callback): void {\r\n    const handlers = this.events[eventName] || [];\r\n    handlers.push(callback);\r\n    this.events[eventName] = handlers;\r\n  }\r\n\r\n  trigger(eventName: string): void {\r\n    const handlers = this.events[eventName];\r\n\r\n    if (!handlers || handlers.length == 0) {\r\n      return;\r\n    }\r\n\r\n    handlers.forEach(callback => {\r\n      callback();\r\n    });\r\n  }\r\n}\r\n","import { User } from './models/User';\r\n\r\nconst user = new User({ name: 'myname', age: 20 });\r\n\r\nuser.on('change', () => {\r\n  console.log('cahnge 1');\r\n});\r\nuser.on('change', () => {\r\n  console.log('change 2');\r\n});\r\n\r\nuser.trigger('change');\r\n"]}